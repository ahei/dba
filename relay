#!/usr/bin/env bash

# Time-stamp: <2019-04-26 09:57:43 Friday by ahei>

# @file relay
# @version 1.0
# @author ahei

readonly PROGRAM_NAME="relay"
readonly PROGRAM_VERSION="1.0.0"

home=`cd $(dirname "$0") && pwd`

echoe()
{
    printf "$*\n" 1>&2
}

usage()
{
    local code=1
    local redirect
    
    if [ $# -gt 0 ]; then
        code="$1"
    fi

    if [ "$code" != 0 ]; then
        redirect="1>&2"
    fi

    eval cat "$redirect" << EOF
usage: ${PROGRAM_NAME} [OPTIONS] SERVER USER LOGIN_COMMAND EXPECTED_STRING (HOST_ALIAS | HOST_NAME)

Options:
    SSH
        Environment variable used to specify which ssh to use.
    -v  Output version info.
    -h  Output this help.
EOF

    exit "$code"
}

port=22

options=":hvp:"
if [ "$(uname)" != "Darwin" ]; then
    eval set -- $(getopt -o "$options" -- "$@")
fi
while getopts "$options" OPT; do
    case "$OPT" in
        p)
            port="$OPTARG"
            ;;
        
        v)
            version
            ;;

        h)
            usage 0
            ;;

        :)
            case "${OPTARG}" in
                ?)
                    echoe "Option \`-${OPTARG}' need argument.\n"
                    usage
            esac
            ;;

        ?)
            echoe "Invalid option \`-${OPTARG}'.\n"
            usage
            ;;
    esac
done

shift $((OPTIND - 1))

if [ $# -lt 4 ]; then
    usage
fi

server=$1
user=$2
login=$3
expected=$4
hostAlias=$5

# 测试hostAlias对应的value是否可能是个shell变量
if eval $hostAlias=1 2>/dev/null; then
    eval $hostAlias=
    maybeVar=1
fi

if [ "$(uname)" != "Darwin" ]; then
    declare -A clusterFiles
fi
. /etc/remoterc 2>/dev/null
. ~/.remoterc 2>/dev/null

if [ "$maybeVar" ]; then
    host="$(eval echo \$$hostAlias)"
fi
if [ ! "$host" ]; then
    host=$hostAlias
fi

[ "$SSH" ] || SSH=ssh

result=$(ps -ef | grep "$server -l $user -p$port -fN" | grep -v grep)
if [ ! "$result" ]; then
    ssh "$server" -l "$user" -p$port -fN
fi
relay.exp "$server" "$user" "$login" "$expected" "$host" "$SSH" "$port"
