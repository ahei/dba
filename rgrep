#!/usr/bin/env bash

# Time-stamp: <2015-07-17 14:40:35 Friday by ahei>

# @file rgrep.sh
# @version 1.0
# @author ahei

readonly PROGRAM_NAME="rgrep"
readonly PROGRAM_VERSION="1.0.0"

home=`cd $(dirname "$0") && pwd`

. "$home"/common.sh

usage()
{
    local code=1
    local redirect
    
    if [ $# -gt 0 ]; then
        code="$1"
    fi

    if [ "$code" != 0 ]; then
        redirect="1>&2"
    fi

    eval cat "$redirect" << EOF
usage: ${PROGRAM_NAME} [OPTIONS] <CLUSTER> <PATTERN> <FILES> [<OTHER_GREP_OPTIONS>]
       ${PROGRAM_NAME} [OPTIONS] -a <CLUSTER> <PATTERN> [<OTHER_GREP_OPTIONS>]

Options:
    -a Automatic get files to grep by <CLUSTER> or current host.
    -o REMOTE_OPTIONS
        Set remote options.
    GERP
        Environment variable used to specify which grep to use.
    -C
        No color display.
    -h <HOUR>
        Set which hour log to grep.
    -d <DAY>
        Set which day log to grep.
    -v  Output version info.
    -H  Output this help.
EOF

    exit "$code"
}

# $1 cluster
getLogFiles()
{
    local cluster=$1

    for key in "${!clusterLogs[@]}"; do
        if grep -qx "$key" <<< "$cluster"; then
            echo -n "${clusterLogs[$key]}"
        fi
    done

    echo -n
}

optInd=1
colorOption=--color=always

while getopts ":h:d:vo:aHC" OPT; do
    case "$OPT" in
        C)
            colorOption=
            let optInd++
            ;;
            
        o)
            remoteOptions="$OPTARG"
            let optInd+=2
            ;;

        a)
            automaticGetFiles=1
            let optInd++
            ;;

        h)
            hour="$OPTARG"
            let optInd+=2
            ;;
            
        d)
            day="$OPTARG"
            let optInd+=2
            ;;

        v)
            version
            ;;

        H)
            usage 0
            ;;

        :)
            case "${OPTARG}" in
                ?)
                    echoe "Option \`-${OPTARG}' need argument.\n"
                    usage
            esac
            ;;

        ?)
            echoe "Invalid option \`-${OPTARG}'.\n"
            usage
            ;;
    esac
done

shift $((optInd - 1))

[ -z "$GREP" ] && GREP=grep

if [ ! "$automaticGetFiles" ]; then
    if [ $# -lt 3 ]; then
        usage
    fi

    cluster=$1
    pattern=$2
    shift 2
    
    remote $remoteOptions "$cluster" "$GREP $colorOption '$pattern' $@"
    exit $?
fi

if [ $# -lt 2 ]; then
    usage
fi

declare -A clusterLogs
. ~/.rgreprc 2>/dev/null

cluster=$1
pattern=$2
shift 2

files=$(getLogFiles "$cluster")
if [ ! "$files" ]; then
    echoe "No log files specified for cluster $cluster!"
    usage
fi

if [ "$day" ]; then
    files=$(sed -r "s/%d|%e/$day/g" <<< "$files")
fi
if [ "$hour" ]; then
    files=$(sed -r "s/%H|%I|%k|%l/$hour/g" <<< "$files")
    files=$(sed -r "s/%H|%I|%k|%l/$hour/g" <<< "$files")
fi

files=$(date +"$files")
remote $remoteOptions "$cluster" "$GREP $colorOption '$pattern' $files $@"
